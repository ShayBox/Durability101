buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: 'com.github.johnrengelman.shadow'

version = "0.0.3"
group = "com.shaybox.durability101"
archivesBaseName = "durability101"

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.12.2-14.23.5.2838"
    runDir = "run"
    mappings = "snapshot_20171003"
}

repositories {
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    compile("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "gson"
        exclude module: "commons-io"
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
                
        expand "version":project.version, "mcversion":project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

runClient {
    args = ["--mixin", "mixins.durability101.json", "--tweakClass", "org.spongepowered.asm.launch.MixinTweaker"]
}

sourceSets {
    main {
        ext.refMap = "mixins.durability101.refmap.json"
    }
}

jar {
    manifest.attributes(
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "MixinConfigs": "mixins.durability101.json",
            "FMLCorePluginContainsFMLMod": "true",
            "ForceLoadAsMod": "true"
    )
}

shadowJar {
    exclude('dummyThing')
    classifier ''
}

reobf {
    shadowJar{}
}